/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// Define the main class for the application
mainClassName = 'gp2'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// basepath for package
def artifactBaseName = 'GP'

version = '2.0.0'
def author = 'John Nazareth'
def description = 'csv version of GP package'

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/commons-cli/commons-cli
	implementation 'commons-cli:commons-cli:1.5.0'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	// https://mvnrepository.com/artifact/commons-io/commons-io
	implementation 'commons-io:commons-io:2.11.0'

	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// https://mvnrepository.com/artifact/org.json/json
	implementation 'org.json:json:20220924'

	// https://mvnrepository.com/artifact/org.glassfish/javax.json
	implementation 'org.glassfish:javax.json:1.1.4'

	// https://mvnrepository.com/artifact/org.apache.poi/poi
	implementation 'org.apache.poi:poi:5.2.0'

	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	implementation 'org.apache.poi:poi-ooxml:5.2.0'

	// https://mvnrepository.com/artifact/net.sf.opencsv/opencsv
	implementation 'net.sf.opencsv:opencsv:2.3'
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
		attributes(	"Implementation-Title": "Gradle",
					"Implementation-Version": version,
					"Created-By": author,
					"Description": description,
					"Main-Class": mainClassName)
	}
	baseName = artifactBaseName
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

task sourcesJar(type: Jar, dependsOn: classes) {
	baseName = artifactBaseName
	classifier = 'sources'
	from sourceSets.main.allSource
}